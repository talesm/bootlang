let aUpper = 'A'.toAscii();
let zUpper = 'Z'.toAscii();
let aLower = 'a'.toAscii();
let zLower = 'z'.toAscii();
let n0 = '0'.toAscii();
let n9 = '9'.toAscii();

let mutable row = 0;
let mutable input = readln();
while readln_ok() {
	let mutable col = 0;
	while col < input.getLength() {
		let mutable ch = input.slice(col, 1);
		/* Ignore blanks*/
		while ch.equals(' ').or(ch.equals(string.fromAscii(10))).or(ch.equals(string.fromAscii(9))) {
			col = col + 1;
		}

        /* Position */
        writeln(row.toString().concat(',').concat(col.toString()));

		if ch.toAscii().isAfter(n0 - 1).and(ch.toAscii().isBefore(n9 + 1)) {
		    /* Number */
			writeln('number')
			write(ch);
			col = col + 1;
			ch = input.slice(col, 1);
			while ch.toAscii().isAfter(n0 - 1).and(ch.toAscii().isBefore(n9 + 1)) {
				col = col + 1;
				ch = input.slice(col, 1);
			}
			col = col - 1;
		} else if ch.toAscii().isAfter(aUpper - 1).and(ch.toAscii().isBefore(zUpper + 1))
				.or(ch.toAscii().isAfter(aLower - 1).and(ch.toAscii().isBefore(zLower + 1))) {
		    /*word*/
			writeln('word')
			write(ch);
			col = col + 1;
			ch = input.slice(col, 1);
			while ch.toAscii().isAfter(n0 - 1).and(ch.toAscii().isBefore(n9 + 1))
					.or(ch.toAscii().isAfter(aUpper - 1).and(ch.toAscii().isBefore(zUpper + 1)))
					.or(ch.toAscii().isAfter(aLower - 1).and(ch.toAscii().isBefore(zLower + 1))) {
				col = col + 1;
				ch = input.slice(col, 1);
			}
			col = col - 1;
		} else if ch.equals('''') {
            /* string */
            writeln('string');
            col = col + 1;
			ch = input.slice(col, 1);
            while ch.equals('').not() {
                if ch.equals('''').and(input.slice(col, 1).equals('''').not()) {
                    if input.slice(col, 1).equals('''') {
                        write('''');
                    } else {
                        break;
                    }
                } else {
                    write(ch);
                    col = col + 1;
                    ch = input.slice(col, 1);
                }
            } 
		} else if ch.equals(',').or(ch.equals('.')).or(ch.equals(';')).or(ch.equals('='))
                .or(ch.equals('(').or(ch.equals(')')).or(ch.equals('{')).or(ch.equals('}')) {
            writeln(ch);
            writeln('');
		} else {
			panic("Unknown char '".concat().concat()
		}
		col = col + 1;
        writeln();
        writeln();
	}
	input = readln();
    row = row + 1;
}
